{"ast":null,"code":"var _jsxFileName = \"/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport MemeList from './components/MemeList';\nimport Form from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/memes').then(response => response.json()).then(data => setMemes(data));\n  }, []);\n  const addMeme = formData => {\n    fetch('http://localhost:3001/api/memes', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(newMeme => setMemes([...memes, newMeme])).catch(error => console.error('Error:', error));\n  };\n  const removeMeme = id => {\n    fetch(`http://localhost:3001/api/memes/${id}`, {\n      method: 'DELETE'\n    }).then(() => setMemes(memes.filter(meme => meme._id !== id)));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addMeme: addMeme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MemeList, {\n      memes: memes,\n      removeMeme: removeMeme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","MemeList","Form","jsxDEV","_jsxDEV","App","_s","memes","setMemes","fetch","then","response","json","data","addMeme","formData","method","body","newMeme","catch","error","console","removeMeme","id","filter","meme","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport MemeList from './components/MemeList';\nimport Form from './components/Form';\n\nfunction App() {\n    const [memes, setMemes] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:3001/api/memes')\n            .then(response => response.json())\n            .then(data => setMemes(data));\n    }, []);\n\n    const addMeme = (formData) => {\n        fetch('http://localhost:3001/api/memes', {\n            method: 'POST',\n            body: formData,\n        })\n            .then(response => response.json())\n            .then(newMeme => setMemes([...memes, newMeme]))\n            .catch(error => console.error('Error:', error));\n    };\n\n    const removeMeme = (id) => {\n        fetch(`http://localhost:3001/api/memes/${id}`, {\n            method: 'DELETE',\n        }).then(() => setMemes(memes.filter(meme => meme._id !== id)));\n    };\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <Form addMeme={addMeme} />\n            <MemeList memes={memes} removeMeme={removeMeme} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,iCAAiC,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAIC,QAAQ,IAAK;IAC1BN,KAAK,CAAC,iCAAiC,EAAE;MACrCO,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEF;IACV,CAAC,CAAC,CACGL,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACQ,OAAO,IAAIV,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEW,OAAO,CAAC,CAAC,CAAC,CAC9CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACvD,CAAC;EAED,MAAME,UAAU,GAAIC,EAAE,IAAK;IACvBd,KAAK,CAAC,mCAAmCc,EAAE,EAAE,EAAE;MAC3CP,MAAM,EAAE;IACZ,CAAC,CAAC,CAACN,IAAI,CAAC,MAAMF,QAAQ,CAACD,KAAK,CAACiB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKH,EAAE,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,oBACInB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBxB,OAAA,CAACJ,MAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5B,OAAA,CAACF,IAAI;MAACY,OAAO,EAAEA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1B5B,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAACe,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAAC1B,EAAA,CAhCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}