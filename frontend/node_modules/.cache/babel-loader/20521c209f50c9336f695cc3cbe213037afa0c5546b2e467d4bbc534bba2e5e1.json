{"ast":null,"code":"var _jsxFileName = \"/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/components/MemeList.js\";\n// frontend/src/components/MemeList.js\nimport React from 'react';\nimport { Card, CardContent, CardMedia, Typography, IconButton, Grid } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeList = ({\n  memes,\n  removeMeme\n}) => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    sx: {\n      mt: 3\n    },\n    children: memes.map(meme => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"140\",\n          image: meme.imageUrl,\n          alt: meme.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: meme.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => removeMeme(meme._id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this)\n    }, meme._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = MemeList;\nexport default MemeList;\nvar _c;\n$RefreshReg$(_c, \"MemeList\");","map":{"version":3,"names":["React","Card","CardContent","CardMedia","Typography","IconButton","Grid","DeleteIcon","jsxDEV","_jsxDEV","MemeList","memes","removeMeme","container","spacing","sx","mt","children","map","meme","item","xs","sm","md","component","height","image","imageUrl","alt","text","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_id","_c","$RefreshReg$"],"sources":["/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/components/MemeList.js"],"sourcesContent":["// frontend/src/components/MemeList.js\nimport React from 'react';\nimport { Card, CardContent, CardMedia, Typography, IconButton, Grid } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst MemeList = ({ memes, removeMeme }) => {\n    return (\n        <Grid container spacing={3} sx={{ mt: 3 }}>\n            {memes.map(meme => (\n                <Grid item xs={12} sm={6} md={4} key={meme._id}>\n                    <Card>\n                        <CardMedia\n                            component=\"img\"\n                            height=\"140\"\n                            image={meme.imageUrl}\n                            alt={meme.text}\n                        />\n                        <CardContent>\n                            <Typography variant=\"h6\" component=\"div\">\n                                {meme.text}\n                            </Typography>\n                            <IconButton onClick={() => removeMeme(meme._id)}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default MemeList;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAC1F,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EACxC,oBACIH,OAAA,CAACH,IAAI;IAACO,SAAS;IAACC,OAAO,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,EACrCN,KAAK,CAACO,GAAG,CAACC,IAAI,iBACXV,OAAA,CAACH,IAAI;MAACc,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAN,QAAA,eAC5BR,OAAA,CAACR,IAAI;QAAAgB,QAAA,gBACDR,OAAA,CAACN,SAAS;UACNqB,SAAS,EAAC,KAAK;UACfC,MAAM,EAAC,KAAK;UACZC,KAAK,EAAEP,IAAI,CAACQ,QAAS;UACrBC,GAAG,EAAET,IAAI,CAACU;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFxB,OAAA,CAACP,WAAW;UAAAe,QAAA,gBACRR,OAAA,CAACL,UAAU;YAAC8B,OAAO,EAAC,IAAI;YAACV,SAAS,EAAC,KAAK;YAAAP,QAAA,EACnCE,IAAI,CAACU;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACbxB,OAAA,CAACJ,UAAU;YAAC8B,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACO,IAAI,CAACiB,GAAG,CAAE;YAAAnB,QAAA,eAC5CR,OAAA,CAACF,UAAU;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC,GAhB2Bd,IAAI,CAACiB,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBxC,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACI,EAAA,GAzBI3B,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}