{"ast":null,"code":"var _jsxFileName = \"/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/pages/CreateMeme.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Container, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMeme = ({\n  addMeme\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('text', text);\n    formData.append('image', file);\n    addMeme(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Create a New Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Meme Text\",\n          variant: \"outlined\",\n          fullWidth: true,\n          value: text,\n          onChange: e => setText(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          style: {\n            display: 'none'\n          },\n          id: \"raised-button-file\",\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"raised-button-file\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            children: \"Choose Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Add Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMeme, \"wmQWBe94VIaTzjwQUpxvuogJC3o=\");\n_c = CreateMeme;\nexport default CreateMeme;\nvar _c;\n$RefreshReg$(_c, \"CreateMeme\");","map":{"version":3,"names":["React","useState","TextField","Button","Container","Typography","Box","jsxDEV","_jsxDEV","CreateMeme","addMeme","_s","text","setText","file","setFile","handleSubmit","e","preventDefault","formData","FormData","append","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","mb","label","fullWidth","value","onChange","target","required","accept","style","display","id","type","files","htmlFor","component","color","_c","$RefreshReg$"],"sources":["/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/pages/CreateMeme.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Container, Typography, Box } from '@mui/material';\n\nconst CreateMeme = ({ addMeme }) => {\n    const [text, setText] = useState('');\n    const [file, setFile] = useState(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('text', text);\n        formData.append('image', file);\n        addMeme(formData);\n    };\n\n    return (\n        <Container>\n            <Typography variant=\"h4\" gutterBottom>\n                Create a New Meme\n            </Typography>\n            <form onSubmit={handleSubmit}>\n                <Box mb={2}>\n                    <TextField\n                        label=\"Meme Text\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                        required\n                    />\n                </Box>\n                <Box mb={2}>\n                    <input\n                        accept=\"image/*\"\n                        style={{ display: 'none' }}\n                        id=\"raised-button-file\"\n                        type=\"file\"\n                        onChange={(e) => setFile(e.target.files[0])}\n                    />\n                    <label htmlFor=\"raised-button-file\">\n                        <Button variant=\"contained\" component=\"span\">\n                            Choose Image\n                        </Button>\n                    </label>\n                </Box>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Add Meme\n                </Button>\n            </form>\n        </Container>\n    );\n};\n\nexport default CreateMeme;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}