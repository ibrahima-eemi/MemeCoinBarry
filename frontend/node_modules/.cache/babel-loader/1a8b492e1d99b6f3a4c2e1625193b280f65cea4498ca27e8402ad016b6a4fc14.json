{"ast":null,"code":"var _jsxFileName = \"/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/pages/CreateMeme.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateMeme = ({\n  addMeme\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [image, setImage] = useState(null);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('text', text);\n    formData.append('image', image);\n    addMeme(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Meme Text\",\n      variant: \"outlined\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      component: \"label\",\n      children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        hidden: true,\n        onChange: e => setImage(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Create Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMeme, \"uIo6PaUBRPF93xdVqgle6adlSWI=\");\n_c = CreateMeme;\nexport default CreateMeme;\nvar _c;\n$RefreshReg$(_c, \"CreateMeme\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","jsxDEV","_jsxDEV","CreateMeme","addMeme","_s","text","setText","image","setImage","handleSubmit","event","preventDefault","formData","FormData","append","component","onSubmit","children","label","variant","fullWidth","margin","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","hidden","files","color","_c","$RefreshReg$"],"sources":["/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/pages/CreateMeme.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\n\nconst CreateMeme = ({ addMeme }) => {\n    const [text, setText] = useState('');\n    const [image, setImage] = useState(null);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const formData = new FormData();\n        formData.append('text', text);\n        formData.append('image', image);\n        addMeme(formData);\n    };\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit}>\n            <TextField\n                label=\"Meme Text\"\n                variant=\"outlined\"\n                fullWidth\n                margin=\"normal\"\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n            />\n            <Button variant=\"contained\" component=\"label\">\n                Upload Image\n                <input type=\"file\" hidden onChange={(e) => setImage(e.target.files[0])} />\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Create Meme\n            </Button>\n        </Box>\n    );\n}\n\nexport default CreateMeme;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAC7BO,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,KAAK,CAAC;IAC/BJ,OAAO,CAACS,QAAQ,CAAC;EACrB,CAAC;EAED,oBACIX,OAAA,CAACF,GAAG;IAACgB,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBACzChB,OAAA,CAACJ,SAAS;MACNqB,KAAK,EAAC,WAAW;MACjBC,OAAO,EAAC,UAAU;MAClBC,SAAS;MACTC,MAAM,EAAC,QAAQ;MACfC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF5B,OAAA,CAACH,MAAM;MAACqB,OAAO,EAAC,WAAW;MAACJ,SAAS,EAAC,OAAO;MAAAE,QAAA,GAAC,cAE1C,eAAAhB,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,MAAM;QAACR,QAAQ,EAAGC,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACO,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACT5B,OAAA,CAACH,MAAM;MAACgC,IAAI,EAAC,QAAQ;MAACX,OAAO,EAAC,WAAW;MAACc,KAAK,EAAC,SAAS;MAAAhB,QAAA,EAAC;IAE1D;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAzB,EAAA,CA/BKF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}