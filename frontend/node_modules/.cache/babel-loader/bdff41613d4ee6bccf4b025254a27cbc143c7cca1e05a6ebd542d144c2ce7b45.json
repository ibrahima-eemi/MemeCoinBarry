{"ast":null,"code":"var _jsxFileName = \"/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/components/Form.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/Form.js\nimport React, { useState } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  addMeme\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [image, setImage] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!text) {\n      alert('Text is required');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('text', text);\n    if (image) {\n      formData.append('image', image);\n    }\n    addMeme(formData);\n    setText('');\n    setImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      mt: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Meme Text\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: text,\n      onChange: e => setText(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      accept: \"image/*\",\n      type: \"file\",\n      onChange: e => setImage(e.target.files[0]),\n      style: {\n        marginTop: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        mt: 3\n      },\n      children: \"Add Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"uIo6PaUBRPF93xdVqgle6adlSWI=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","jsxDEV","_jsxDEV","Form","addMeme","_s","text","setText","image","setImage","handleSubmit","e","preventDefault","alert","formData","FormData","append","component","onSubmit","sx","mt","children","label","variant","fullWidth","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","accept","type","files","style","marginTop","color","_c","$RefreshReg$"],"sources":["/home/barry/Documents/Blockchain/Memecoin_With_BlackBoxAi/frontend/src/components/Form.js"],"sourcesContent":["// frontend/src/components/Form.js\nimport React, { useState } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\n\nconst Form = ({ addMeme }) => {\n    const [text, setText] = useState('');\n    const [image, setImage] = useState(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!text) {\n            alert('Text is required');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('text', text);\n        if (image) {\n            formData.append('image', image);\n        }\n\n        addMeme(formData);\n        setText('');\n        setImage(null);\n    };\n\n    return (\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <TextField\n                label=\"Meme Text\"\n                variant=\"outlined\"\n                fullWidth\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                required\n            />\n            <input\n                accept=\"image/*\"\n                type=\"file\"\n                onChange={(e) => setImage(e.target.files[0])}\n                style={{ marginTop: 16 }}\n            />\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ mt: 3 }}>\n                Add Meme\n            </Button>\n        </Box>\n    );\n};\n\nexport default Form;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE;MACPO,KAAK,CAAC,kBAAkB,CAAC;MACzB;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;IAC7B,IAAIE,KAAK,EAAE;MACPM,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAER,KAAK,CAAC;IACnC;IAEAJ,OAAO,CAACU,QAAQ,CAAC;IACjBP,OAAO,CAAC,EAAE,CAAC;IACXE,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACIP,OAAA,CAACF,GAAG;IAACiB,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAER,YAAa;IAACS,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACxDnB,OAAA,CAACJ,SAAS;MACNwB,KAAK,EAAC,WAAW;MACjBC,OAAO,EAAC,UAAU;MAClBC,SAAS;MACTC,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAGf,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACF9B,OAAA;MACI+B,MAAM,EAAC,SAAS;MAChBC,IAAI,EAAC,MAAM;MACXR,QAAQ,EAAGf,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACgB,MAAM,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAE;MAC7CC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAG;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF9B,OAAA,CAACH,MAAM;MAACmC,IAAI,EAAC,QAAQ;MAACX,OAAO,EAAC,WAAW;MAACe,KAAK,EAAC,SAAS;MAACnB,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAC,QAAA,EAAC;IAEzE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC3B,EAAA,CA3CIF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}